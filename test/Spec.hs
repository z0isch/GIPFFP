import           Control.Arrow   (second)
import           Data.Map.Strict (fromList)
import           Data.Set        (Set)
import qualified Data.Set        as Set
import           GIPF.Types
import           Test.Hspec
import           Test.QuickCheck

main :: IO ()
main = hspec $ do
  describe "Grid Lines" $
    it "Length" $ do
      let setOfGridLines = foldr (Set.insert . foldr Set.insert Set.empty) Set.empty gridLines
      Set.size setOfGridLines `shouldBe` 21
  describe "Neighbor Props" $ do
    it "Get neighbor in direction" $
      property prop_neighborDir
    it "Inverse directions" $
      property prop_inverseDir
    it "Inverse neighbor" $
      property prop_inverseNeighbor
  describe "Place Piece" $ do
    it "Invalid places" $ do
      playPiece ((4,0),Piece Player2 NormalPiece) DownD  standardGrid `shouldBe` Nothing
      playPiece ((3,0),Piece Player2 NormalPiece) DownD  standardGrid `shouldBe` Nothing
    it "Valid placement" $ do
      playPiece ((3,0),Piece Player1 NormalPiece) UpD  emptyGrid `shouldBe` Just placePieceOpenExpected
      playPiece ((3,0),Piece Player1 NormalPiece) UpD  standardGrid `shouldBe` Just placePiecePush1Expected
      playPiece ((3,0),Piece Player2 NormalPiece) UpD  placePiecePush1Expected `shouldBe` Just placePiecePush2Expected
      playPiece ((3,0),Piece Player1 NormalPiece) UpLeftD placePiecePush2Expected `shouldBe` Just placePiecePush1CrossExpected
  describe "Piece Runs" $ do
    it "Manually created" $ do
      setOfPieceRun(pieceRuns (updateGrid emptyGrid pieceRun1of4)) `shouldBe` setOfPieceRun [(Player1,map fst pieceRun1of4)]
      setOfPieceRun(pieceRuns (updateGrid emptyGrid pieceRun1of5)) `shouldBe` setOfPieceRun [(Player1,map fst pieceRun1of5)]
      setOfPieceRun(pieceRuns (updateGrid emptyGrid (pieceRun1of4 ++ pieceRun2of4Part2))) `shouldBe` setOfPieceRun [(Player1,map fst pieceRun2of4Part2), (Player1,map fst pieceRun1of4)]
    it "QC gen test" $ sequence_ qcPieceRunTests

placePieceOpenExpected :: Grid
placePieceOpenExpected = updateGrid emptyGrid [((3,0), Piece Player1 NormalPiece)]

placePiecePush1Expected :: Grid
placePiecePush1Expected = updateGrid standardGrid [((3,0), Piece Player1 NormalPiece),((3,-1), Piece Player2 GIPFPiece)]

placePiecePush2Expected :: Grid
placePiecePush2Expected = updateGrid standardGrid [((3,0), Piece Player2 NormalPiece),((3,-1), Piece Player1 NormalPiece),((3,-2), Piece Player2 GIPFPiece)]

placePiecePush1CrossExpected :: Grid
placePiecePush1CrossExpected = updateGrid standardGrid [((3,0), Piece Player1 NormalPiece),((2,0), Piece Player2 NormalPiece),((3,-1), Piece Player1 NormalPiece),((3,-2), Piece Player2 GIPFPiece)]

pieceRun1of4 :: [((Int, Int), Piece)]
pieceRun1of4 = [((0,0), Piece Player1 NormalPiece),((1,0), Piece Player1 NormalPiece),((2,0), Piece Player1 NormalPiece),((3,0), Piece Player1 NormalPiece)]

pieceRun2of4Part2 :: [((Int, Int), Piece)]
pieceRun2of4Part2 = [((0,0), Piece Player1 NormalPiece),((0,-1), Piece Player1 NormalPiece),((0,-2), Piece Player1 NormalPiece),((0,-3), Piece Player1 NormalPiece)]

pieceRun1of5 :: [((Int, Int), Piece)]
pieceRun1of5 = [((-1,0), Piece Player1 NormalPiece),((0,0), Piece Player1 NormalPiece),((1,0), Piece Player1 NormalPiece),((2,0), Piece Player1 NormalPiece),((3,0), Piece Player1 NormalPiece)]

prop_neighborDir :: Point -> Direction -> Bool
prop_neighborDir p d = Just d == getDirection p' p
  where p' = getNeighbor p d

prop_inverseDir :: Direction -> Bool
prop_inverseDir d = oppositeDirection (oppositeDirection d) == d

prop_inverseNeighbor :: Point -> Direction -> Bool
prop_inverseNeighbor p d = p == p''
  where
    p' = getNeighbor p d
    p'' = getNeighbor p' (oppositeDirection d)

setOfPieceRun :: [(Player,[(Int, Int)])] -> Set (Player, Set (Int, Int))
setOfPieceRun = foldr (Set.insert . second Set.fromList) Set.empty

qcPieceRunTests :: [Expectation]
qcPieceRunTests = [setOfPieceRun (pieceRuns $ Grid (fromList [((-3,0),Nothing),((-3,1),Just (Piece Player1 GIPFPiece)),((-3,2),Just (Piece Player1 NormalPiece)),((-3,3),Just (Piece Player2 NormalPiece)),((-2,-1),Just (Piece Player1 GIPFPiece)),((-2,0),Just (Piece Player1 NormalPiece)),((-2,1),Just (Piece Player2 GIPFPiece)),((-2,2),Just (Piece Player1 GIPFPiece)),((-2,3),Just (Piece Player2 GIPFPiece)),((-1,-2),Just (Piece Player2 GIPFPiece)),((-1,-1),Just (Piece Player2 NormalPiece)),((-1,0),Nothing),((-1,1),Just (Piece Player1 NormalPiece)),((-1,2),Just (Piece Player2 NormalPiece)),((-1,3),Just (Piece Player2 NormalPiece)),((0,-3),Nothing),((0,-2),Just (Piece Player1 NormalPiece)),((0,-1),Just (Piece Player1 NormalPiece)),((0,0),Nothing),((0,1),Nothing),((0,2),Just (Piece Player1 GIPFPiece)),((0,3),Just (Piece Player2 NormalPiece)),((1,-3),Just (Piece Player2 GIPFPiece)),((1,-2),Just (Piece Player2 NormalPiece)),((1,-1),Nothing),((1,0),Just (Piece Player2 GIPFPiece)),((1,1),Just (Piece Player2 GIPFPiece)),((1,2),Just (Piece Player2 NormalPiece)),((2,-3),Just (Piece Player1 GIPFPiece)),((2,-2),Just (Piece Player1 NormalPiece)),((2,-1),Nothing),((2,0),Just (Piece Player1 NormalPiece)),((2,1),Just (Piece Player2 NormalPiece)),((3,-3),Nothing),((3,-2),Just (Piece Player2 GIPFPiece)),((3,-1),Just (Piece Player2 NormalPiece)),((3,0),Just (Piece Player1 NormalPiece))])) `shouldBe` setOfPieceRun [(Player2,[(-3,3),(-2,3),(-1,3),(0,3)])],setOfPieceRun (pieceRuns $ Grid (fromList [((-3,0),Just (Piece Player2 GIPFPiece)),((-3,1),Nothing),((-3,2),Just (Piece Player1 GIPFPiece)),((-3,3),Just (Piece Player1 NormalPiece)),((-2,-1),Just (Piece Player2 GIPFPiece)),((-2,0),Just (Piece Player2 NormalPiece)),((-2,1),Just (Piece Player2 GIPFPiece)),((-2,2),Just (Piece Player1 NormalPiece)),((-2,3),Nothing),((-1,-2),Just (Piece Player2 NormalPiece)),((-1,-1),Just (Piece Player1 NormalPiece)),((-1,0),Just (Piece Player2 GIPFPiece)),((-1,1),Just (Piece Player2 GIPFPiece)),((-1,2),Nothing),((-1,3),Just (Piece Player1 GIPFPiece)),((0,-3),Just (Piece Player1 GIPFPiece)),((0,-2),Just (Piece Player1 GIPFPiece)),((0,-1),Just (Piece Player1 NormalPiece)),((0,0),Nothing),((0,1),Just (Piece Player1 NormalPiece)),((0,2),Just (Piece Player2 GIPFPiece)),((0,3),Just (Piece Player1 NormalPiece)),((1,-3),Nothing),((1,-2),Just (Piece Player1 GIPFPiece)),((1,-1),Just (Piece Player2 GIPFPiece)),((1,0),Just (Piece Player2 GIPFPiece)),((1,1),Nothing),((1,2),Just (Piece Player2 NormalPiece)),((2,-3),Nothing),((2,-2),Nothing),((2,-1),Nothing),((2,0),Just (Piece Player2 GIPFPiece)),((2,1),Nothing),((3,-3),Nothing),((3,-2),Just (Piece Player2 GIPFPiece)),((3,-1),Just (Piece Player1 GIPFPiece)),((3,0),Nothing)])) `shouldBe` setOfPieceRun [],setOfPieceRun (pieceRuns $ Grid (fromList [((-3,0),Just (Piece Player2 GIPFPiece)),((-3,1),Just (Piece Player2 NormalPiece)),((-3,2),Just (Piece Player1 NormalPiece)),((-3,3),Nothing),((-2,-1),Just (Piece Player1 GIPFPiece)),((-2,0),Just (Piece Player2 GIPFPiece)),((-2,1),Just (Piece Player2 GIPFPiece)),((-2,2),Just (Piece Player2 GIPFPiece)),((-2,3),Just (Piece Player1 NormalPiece)),((-1,-2),Just (Piece Player1 GIPFPiece)),((-1,-1),Just (Piece Player2 GIPFPiece)),((-1,0),Just (Piece Player2 NormalPiece)),((-1,1),Just (Piece Player1 NormalPiece)),((-1,2),Nothing),((-1,3),Just (Piece Player2 GIPFPiece)),((0,-3),Just (Piece Player1 GIPFPiece)),((0,-2),Just (Piece Player2 NormalPiece)),((0,-1),Nothing),((0,0),Nothing),((0,1),Just (Piece Player1 GIPFPiece)),((0,2),Just (Piece Player2 GIPFPiece)),((0,3),Nothing),((1,-3),Just (Piece Player2 GIPFPiece)),((1,-2),Nothing),((1,-1),Just (Piece Player2 GIPFPiece)),((1,0),Nothing),((1,1),Just (Piece Player2 NormalPiece)),((1,2),Just (Piece Player1 NormalPiece)),((2,-3),Nothing),((2,-2),Just (Piece Player1 GIPFPiece)),((2,-1),Just (Piece Player2 GIPFPiece)),((2,0),Just (Piece Player1 NormalPiece)),((2,1),Just (Piece Player2 NormalPiece)),((3,-3),Just (Piece Player2 NormalPiece)),((3,-2),Just (Piece Player2 GIPFPiece)),((3,-1),Just (Piece Player1 NormalPiece)),((3,0),Just (Piece Player2 GIPFPiece))])) `shouldBe` setOfPieceRun [(Player2,[(-3,1),(-2,0),(-1,-1),(0,-2),(1,-3)])],setOfPieceRun (pieceRuns $ Grid (fromList [((-3,0),Just (Piece Player1 NormalPiece)),((-3,1),Just (Piece Player2 NormalPiece)),((-3,2),Just (Piece Player2 NormalPiece)),((-3,3),Just (Piece Player1 GIPFPiece)),((-2,-1),Just (Piece Player1 GIPFPiece)),((-2,0),Nothing),((-2,1),Just (Piece Player2 NormalPiece)),((-2,2),Just (Piece Player2 NormalPiece)),((-2,3),Nothing),((-1,-2),Just (Piece Player1 NormalPiece)),((-1,-1),Just (Piece Player1 NormalPiece)),((-1,0),Just (Piece Player1 GIPFPiece)),((-1,1),Just (Piece Player2 NormalPiece)),((-1,2),Just (Piece Player2 GIPFPiece)),((-1,3),Just (Piece Player1 GIPFPiece)),((0,-3),Nothing),((0,-2),Just (Piece Player1 GIPFPiece)),((0,-1),Just (Piece Player2 GIPFPiece)),((0,0),Nothing),((0,1),Just (Piece Player1 NormalPiece)),((0,2),Just (Piece Player2 GIPFPiece)),((0,3),Just (Piece Player2 GIPFPiece)),((1,-3),Just (Piece Player2 NormalPiece)),((1,-2),Nothing),((1,-1),Nothing),((1,0),Just (Piece Player2 GIPFPiece)),((1,1),Just (Piece Player1 NormalPiece)),((1,2),Just (Piece Player1 GIPFPiece)),((2,-3),Just (Piece Player1 NormalPiece)),((2,-2),Nothing),((2,-1),Just (Piece Player1 GIPFPiece)),((2,0),Just (Piece Player1 NormalPiece)),((2,1),Just (Piece Player1 NormalPiece)),((3,-3),Just (Piece Player2 NormalPiece)),((3,-2),Just (Piece Player1 GIPFPiece)),((3,-1),Just (Piece Player1 NormalPiece)),((3,0),Nothing)])) `shouldBe` setOfPieceRun [(Player2,[(-3,2),(-2,2),(-1,2),(0,2),(1,2)])],setOfPieceRun (pieceRuns $ Grid (fromList [((-3,0),Just (Piece Player2 GIPFPiece)),((-3,1),Just (Piece Player1 GIPFPiece)),((-3,2),Just (Piece Player2 NormalPiece)),((-3,3),Just (Piece Player1 GIPFPiece)),((-2,-1),Just (Piece Player1 GIPFPiece)),((-2,0),Nothing),((-2,1),Nothing),((-2,2),Just (Piece Player1 GIPFPiece)),((-2,3),Just (Piece Player2 NormalPiece)),((-1,-2),Just (Piece Player2 GIPFPiece)),((-1,-1),Just (Piece Player1 GIPFPiece)),((-1,0),Just (Piece Player2 GIPFPiece)),((-1,1),Just (Piece Player1 NormalPiece)),((-1,2),Just (Piece Player1 NormalPiece)),((-1,3),Just (Piece Player2 NormalPiece)),((0,-3),Just (Piece Player2 NormalPiece)),((0,-2),Just (Piece Player2 GIPFPiece)),((0,-1),Just (Piece Player1 GIPFPiece)),((0,0),Just (Piece Player1 NormalPiece)),((0,1),Just (Piece Player1 NormalPiece)),((0,2),Just (Piece Player2 GIPFPiece)),((0,3),Just (Piece Player1 GIPFPiece)),((1,-3),Nothing),((1,-2),Just (Piece Player1 GIPFPiece)),((1,-1),Nothing),((1,0),Just (Piece Player1 GIPFPiece)),((1,1),Just (Piece Player1 NormalPiece)),((1,2),Just (Piece Player1 GIPFPiece)),((2,-3),Just (Piece Player1 GIPFPiece)),((2,-2),Nothing),((2,-1),Just (Piece Player1 NormalPiece)),((2,0),Just (Piece Player1 GIPFPiece)),((2,1),Just (Piece Player1 GIPFPiece)),((3,-3),Just (Piece Player2 GIPFPiece)),((3,-2),Just (Piece Player1 GIPFPiece)),((3,-1),Just (Piece Player1 NormalPiece)),((3,0),Just (Piece Player1 GIPFPiece))])) `shouldBe` setOfPieceRun [(Player1,[(-1,0),(0,0),(1,0),(2,0),(3,0)]),(Player1,[(-1,1),(0,1),(1,1),(2,1)]),(Player1,[(-3,3),(-2,2),(-1,1),(0,0)]),(Player1,[(-2,3),(-1,2),(0,1),(1,0),(2,-1),(3,-2)]),(Player1,[(0,3),(1,2),(2,1),(3,0)])],setOfPieceRun (pieceRuns $ Grid (fromList [((-3,0),Just (Piece Player1 GIPFPiece)),((-3,1),Just (Piece Player1 GIPFPiece)),((-3,2),Nothing),((-3,3),Just (Piece Player2 NormalPiece)),((-2,-1),Just (Piece Player2 GIPFPiece)),((-2,0),Just (Piece Player2 GIPFPiece)),((-2,1),Just (Piece Player1 GIPFPiece)),((-2,2),Just (Piece Player1 NormalPiece)),((-2,3),Nothing),((-1,-2),Just (Piece Player1 NormalPiece)),((-1,-1),Nothing),((-1,0),Just (Piece Player2 GIPFPiece)),((-1,1),Just (Piece Player2 GIPFPiece)),((-1,2),Just (Piece Player1 NormalPiece)),((-1,3),Just (Piece Player1 GIPFPiece)),((0,-3),Nothing),((0,-2),Just (Piece Player1 NormalPiece)),((0,-1),Just (Piece Player1 GIPFPiece)),((0,0),Just (Piece Player2 GIPFPiece)),((0,1),Just (Piece Player2 GIPFPiece)),((0,2),Just (Piece Player1 NormalPiece)),((0,3),Just (Piece Player2 GIPFPiece)),((1,-3),Just (Piece Player1 GIPFPiece)),((1,-2),Just (Piece Player2 NormalPiece)),((1,-1),Nothing),((1,0),Just (Piece Player2 NormalPiece)),((1,1),Just (Piece Player2 GIPFPiece)),((1,2),Just (Piece Player2 NormalPiece)),((2,-3),Nothing),((2,-2),Nothing),((2,-1),Nothing),((2,0),Just (Piece Player1 NormalPiece)),((2,1),Just (Piece Player2 NormalPiece)),((3,-3),Just (Piece Player2 NormalPiece)),((3,-2),Just (Piece Player2 NormalPiece)),((3,-1),Just (Piece Player2 NormalPiece)),((3,0),Just (Piece Player2 GIPFPiece))])) `shouldBe` setOfPieceRun [(Player2,[(3,-3),(3,-2),(3,-1),(3,0)]),(Player2,[(-3,0),(-2,0),(-1,0),(0,0),(1,0),(2,0),(3,0)]),(Player2,[(-3,1),(-2,1),(-1,1),(0,1),(1,1),(2,1)]),(Player2,[(0,3),(1,2),(2,1),(3,0)])],setOfPieceRun (pieceRuns $ Grid (fromList [((-3,0),Nothing),((-3,1),Just (Piece Player2 GIPFPiece)),((-3,2),Just (Piece Player2 NormalPiece)),((-3,3),Just (Piece Player2 NormalPiece)),((-2,-1),Nothing),((-2,0),Nothing),((-2,1),Just (Piece Player2 GIPFPiece)),((-2,2),Just (Piece Player2 GIPFPiece)),((-2,3),Just (Piece Player1 NormalPiece)),((-1,-2),Nothing),((-1,-1),Just (Piece Player2 GIPFPiece)),((-1,0),Just (Piece Player2 NormalPiece)),((-1,1),Just (Piece Player1 NormalPiece)),((-1,2),Just (Piece Player2 GIPFPiece)),((-1,3),Just (Piece Player1 NormalPiece)),((0,-3),Just (Piece Player1 GIPFPiece)),((0,-2),Just (Piece Player1 GIPFPiece)),((0,-1),Just (Piece Player2 NormalPiece)),((0,0),Just (Piece Player2 GIPFPiece)),((0,1),Nothing),((0,2),Just (Piece Player1 NormalPiece)),((0,3),Just (Piece Player2 GIPFPiece)),((1,-3),Just (Piece Player2 NormalPiece)),((1,-2),Just (Piece Player2 NormalPiece)),((1,-1),Just (Piece Player1 NormalPiece)),((1,0),Nothing),((1,1),Just (Piece Player1 NormalPiece)),((1,2),Just (Piece Player2 GIPFPiece)),((2,-3),Just (Piece Player1 NormalPiece)),((2,-2),Just (Piece Player1 GIPFPiece)),((2,-1),Nothing),((2,0),Nothing),((2,1),Just (Piece Player2 NormalPiece)),((3,-3),Nothing),((3,-2),Nothing),((3,-1),Just (Piece Player2 NormalPiece)),((3,0),Just (Piece Player2 GIPFPiece))])) `shouldBe` setOfPieceRun [(Player2,[(-3,2),(-2,1),(-1,0),(0,-1),(1,-2),(2,-3)]),(Player2,[(0,3),(1,2),(2,1),(3,0)])],setOfPieceRun (pieceRuns $ Grid (fromList [((-3,0),Nothing),((-3,1),Just (Piece Player1 NormalPiece)),((-3,2),Just (Piece Player1 GIPFPiece)),((-3,3),Nothing),((-2,-1),Just (Piece Player2 NormalPiece)),((-2,0),Just (Piece Player2 NormalPiece)),((-2,1),Nothing),((-2,2),Nothing),((-2,3),Nothing),((-1,-2),Just (Piece Player1 GIPFPiece)),((-1,-1),Just (Piece Player1 GIPFPiece)),((-1,0),Just (Piece Player1 GIPFPiece)),((-1,1),Nothing),((-1,2),Just (Piece Player2 NormalPiece)),((-1,3),Just (Piece Player1 GIPFPiece)),((0,-3),Just (Piece Player2 GIPFPiece)),((0,-2),Nothing),((0,-1),Nothing),((0,0),Nothing),((0,1),Nothing),((0,2),Just (Piece Player1 NormalPiece)),((0,3),Just (Piece Player1 NormalPiece)),((1,-3),Just (Piece Player2 NormalPiece)),((1,-2),Nothing),((1,-1),Just (Piece Player1 NormalPiece)),((1,0),Just (Piece Player1 GIPFPiece)),((1,1),Just (Piece Player1 NormalPiece)),((1,2),Just (Piece Player1 GIPFPiece)),((2,-3),Nothing),((2,-2),Just (Piece Player1 GIPFPiece)),((2,-1),Just (Piece Player1 NormalPiece)),((2,0),Just (Piece Player2 NormalPiece)),((2,1),Nothing),((3,-3),Nothing),((3,-2),Just (Piece Player1 GIPFPiece)),((3,-1),Nothing),((3,0),Just (Piece Player1 GIPFPiece))])) `shouldBe` setOfPieceRun [(Player1,[(1,-1),(1,0),(1,1),(1,2)])],setOfPieceRun (pieceRuns $ Grid (fromList [((-3,0),Just (Piece Player1 NormalPiece)),((-3,1),Nothing),((-3,2),Nothing),((-3,3),Nothing),((-2,-1),Just (Piece Player1 NormalPiece)),((-2,0),Just (Piece Player1 NormalPiece)),((-2,1),Nothing),((-2,2),Just (Piece Player2 GIPFPiece)),((-2,3),Just (Piece Player2 GIPFPiece)),((-1,-2),Just (Piece Player1 NormalPiece)),((-1,-1),Just (Piece Player2 NormalPiece)),((-1,0),Just (Piece Player2 NormalPiece)),((-1,1),Just (Piece Player1 GIPFPiece)),((-1,2),Just (Piece Player1 NormalPiece)),((-1,3),Just (Piece Player1 NormalPiece)),((0,-3),Just (Piece Player1 GIPFPiece)),((0,-2),Just (Piece Player1 NormalPiece)),((0,-1),Just (Piece Player1 NormalPiece)),((0,0),Nothing),((0,1),Nothing),((0,2),Just (Piece Player1 GIPFPiece)),((0,3),Just (Piece Player1 GIPFPiece)),((1,-3),Nothing),((1,-2),Just (Piece Player2 NormalPiece)),((1,-1),Just (Piece Player2 GIPFPiece)),((1,0),Nothing),((1,1),Just (Piece Player1 NormalPiece)),((1,2),Just (Piece Player2 GIPFPiece)),((2,-3),Nothing),((2,-2),Just (Piece Player1 NormalPiece)),((2,-1),Just (Piece Player2 NormalPiece)),((2,0),Just (Piece Player2 NormalPiece)),((2,1),Nothing),((3,-3),Nothing),((3,-2),Just (Piece Player2 GIPFPiece)),((3,-1),Just (Piece Player1 NormalPiece)),((3,0),Just (Piece Player2 NormalPiece))])) `shouldBe` setOfPieceRun [(Player1,[(-3,0),(-2,-1),(-1,-2),(0,-3)])],setOfPieceRun (pieceRuns $ Grid (fromList [((-3,0),Just (Piece Player1 GIPFPiece)),((-3,1),Just (Piece Player2 GIPFPiece)),((-3,2),Just (Piece Player2 GIPFPiece)),((-3,3),Nothing),((-2,-1),Just (Piece Player1 GIPFPiece)),((-2,0),Just (Piece Player1 GIPFPiece)),((-2,1),Just (Piece Player2 GIPFPiece)),((-2,2),Just (Piece Player2 GIPFPiece)),((-2,3),Just (Piece Player2 NormalPiece)),((-1,-2),Just (Piece Player2 GIPFPiece)),((-1,-1),Just (Piece Player1 GIPFPiece)),((-1,0),Just (Piece Player1 NormalPiece)),((-1,1),Just (Piece Player1 NormalPiece)),((-1,2),Just (Piece Player1 GIPFPiece)),((-1,3),Just (Piece Player1 NormalPiece)),((0,-3),Just (Piece Player2 NormalPiece)),((0,-2),Nothing),((0,-1),Just (Piece Player1 NormalPiece)),((0,0),Just (Piece Player1 NormalPiece)),((0,1),Nothing),((0,2),Just (Piece Player2 GIPFPiece)),((0,3),Nothing),((1,-3),Just (Piece Player2 NormalPiece)),((1,-2),Nothing),((1,-1),Just (Piece Player1 NormalPiece)),((1,0),Just (Piece Player1 NormalPiece)),((1,1),Nothing),((1,2),Nothing),((2,-3),Just (Piece Player2 GIPFPiece)),((2,-2),Just (Piece Player1 GIPFPiece)),((2,-1),Nothing),((2,0),Just (Piece Player2 GIPFPiece)),((2,1),Just (Piece Player1 GIPFPiece)),((3,-3),Nothing),((3,-2),Nothing),((3,-1),Just (Piece Player2 NormalPiece)),((3,0),Just (Piece Player2 NormalPiece))])) `shouldBe` setOfPieceRun [(Player1,[(-1,-2),(-1,-1),(-1,0),(-1,1),(-1,2),(-1,3)]),(Player1,[(-2,-1),(-1,-1),(0,-1),(1,-1)]),(Player1,[(-3,0),(-2,0),(-1,0),(0,0),(1,0),(2,0),(3,0)]),(Player1,[(-2,2),(-1,1),(0,0),(1,-1),(2,-2)])],setOfPieceRun (pieceRuns $ Grid (fromList [((-3,0),Nothing),((-3,1),Nothing),((-3,2),Nothing),((-3,3),Just (Piece Player1 GIPFPiece)),((-2,-1),Just (Piece Player1 NormalPiece)),((-2,0),Nothing),((-2,1),Nothing),((-2,2),Just (Piece Player2 NormalPiece)),((-2,3),Just (Piece Player2 NormalPiece)),((-1,-2),Nothing),((-1,-1),Nothing),((-1,0),Just (Piece Player2 NormalPiece)),((-1,1),Just (Piece Player1 NormalPiece)),((-1,2),Just (Piece Player2 NormalPiece)),((-1,3),Just (Piece Player2 GIPFPiece)),((0,-3),Just (Piece Player1 NormalPiece)),((0,-2),Just (Piece Player2 GIPFPiece)),((0,-1),Just (Piece Player2 GIPFPiece)),((0,0),Just (Piece Player2 NormalPiece)),((0,1),Just (Piece Player1 GIPFPiece)),((0,2),Just (Piece Player1 GIPFPiece)),((0,3),Nothing),((1,-3),Just (Piece Player1 NormalPiece)),((1,-2),Just (Piece Player2 GIPFPiece)),((1,-1),Just (Piece Player2 GIPFPiece)),((1,0),Just (Piece Player1 NormalPiece)),((1,1),Nothing),((1,2),Nothing),((2,-3),Just (Piece Player1 GIPFPiece)),((2,-2),Just (Piece Player1 NormalPiece)),((2,-1),Nothing),((2,0),Just (Piece Player2 GIPFPiece)),((2,1),Just (Piece Player1 GIPFPiece)),((3,-3),Nothing),((3,-2),Nothing),((3,-1),Just (Piece Player1 NormalPiece)),((3,0),Just (Piece Player1 NormalPiece))])) `shouldBe` setOfPieceRun [],setOfPieceRun (pieceRuns $ Grid (fromList [((-3,0),Just (Piece Player1 GIPFPiece)),((-3,1),Nothing),((-3,2),Just (Piece Player1 GIPFPiece)),((-3,3),Nothing),((-2,-1),Nothing),((-2,0),Just (Piece Player2 GIPFPiece)),((-2,1),Just (Piece Player2 NormalPiece)),((-2,2),Just (Piece Player1 GIPFPiece)),((-2,3),Just (Piece Player2 GIPFPiece)),((-1,-2),Just (Piece Player1 NormalPiece)),((-1,-1),Just (Piece Player1 NormalPiece)),((-1,0),Just (Piece Player2 GIPFPiece)),((-1,1),Just (Piece Player1 NormalPiece)),((-1,2),Just (Piece Player2 GIPFPiece)),((-1,3),Nothing),((0,-3),Just (Piece Player1 NormalPiece)),((0,-2),Nothing),((0,-1),Just (Piece Player1 GIPFPiece)),((0,0),Just (Piece Player1 NormalPiece)),((0,1),Nothing),((0,2),Just (Piece Player2 GIPFPiece)),((0,3),Nothing),((1,-3),Nothing),((1,-2),Just (Piece Player1 GIPFPiece)),((1,-1),Just (Piece Player1 NormalPiece)),((1,0),Just (Piece Player1 GIPFPiece)),((1,1),Just (Piece Player1 GIPFPiece)),((1,2),Nothing),((2,-3),Just (Piece Player2 NormalPiece)),((2,-2),Just (Piece Player1 GIPFPiece)),((2,-1),Just (Piece Player2 NormalPiece)),((2,0),Just (Piece Player2 GIPFPiece)),((2,1),Nothing),((3,-3),Just (Piece Player2 GIPFPiece)),((3,-2),Just (Piece Player1 GIPFPiece)),((3,-1),Just (Piece Player1 NormalPiece)),((3,0),Nothing)])) `shouldBe` setOfPieceRun [(Player1,[(1,-2),(1,-1),(1,0),(1,1)]),(Player1,[(-2,2),(-1,1),(0,0),(1,-1),(2,-2),(3,-3)])],setOfPieceRun (pieceRuns $ Grid (fromList [((-3,0),Just (Piece Player1 GIPFPiece)),((-3,1),Just (Piece Player2 NormalPiece)),((-3,2),Just (Piece Player2 GIPFPiece)),((-3,3),Just (Piece Player2 NormalPiece)),((-2,-1),Nothing),((-2,0),Just (Piece Player1 GIPFPiece)),((-2,1),Just (Piece Player2 GIPFPiece)),((-2,2),Just (Piece Player1 NormalPiece)),((-2,3),Nothing),((-1,-2),Just (Piece Player1 GIPFPiece)),((-1,-1),Just (Piece Player2 NormalPiece)),((-1,0),Just (Piece Player2 GIPFPiece)),((-1,1),Just (Piece Player1 GIPFPiece)),((-1,2),Just (Piece Player1 GIPFPiece)),((-1,3),Just (Piece Player2 NormalPiece)),((0,-3),Just (Piece Player1 NormalPiece)),((0,-2),Nothing),((0,-1),Nothing),((0,0),Just (Piece Player2 GIPFPiece)),((0,1),Just (Piece Player2 NormalPiece)),((0,2),Just (Piece Player1 GIPFPiece)),((0,3),Just (Piece Player2 NormalPiece)),((1,-3),Just (Piece Player1 NormalPiece)),((1,-2),Just (Piece Player1 NormalPiece)),((1,-1),Just (Piece Player1 GIPFPiece)),((1,0),Nothing),((1,1),Just (Piece Player2 GIPFPiece)),((1,2),Nothing),((2,-3),Nothing),((2,-2),Just (Piece Player1 NormalPiece)),((2,-1),Just (Piece Player1 NormalPiece)),((2,0),Just (Piece Player1 NormalPiece)),((2,1),Just (Piece Player2 GIPFPiece)),((3,-3),Just (Piece Player1 GIPFPiece)),((3,-2),Just (Piece Player2 NormalPiece)),((3,-1),Just (Piece Player1 NormalPiece)),((3,0),Just (Piece Player2 NormalPiece))])) `shouldBe` setOfPieceRun [],setOfPieceRun (pieceRuns $ Grid (fromList [((-3,0),Just (Piece Player1 GIPFPiece)),((-3,1),Just (Piece Player2 GIPFPiece)),((-3,2),Nothing),((-3,3),Just (Piece Player2 NormalPiece)),((-2,-1),Just (Piece Player2 GIPFPiece)),((-2,0),Just (Piece Player2 GIPFPiece)),((-2,1),Nothing),((-2,2),Just (Piece Player1 NormalPiece)),((-2,3),Just (Piece Player1 GIPFPiece)),((-1,-2),Just (Piece Player1 GIPFPiece)),((-1,-1),Just (Piece Player2 NormalPiece)),((-1,0),Just (Piece Player2 NormalPiece)),((-1,1),Nothing),((-1,2),Just (Piece Player1 NormalPiece)),((-1,3),Just (Piece Player1 GIPFPiece)),((0,-3),Just (Piece Player2 GIPFPiece)),((0,-2),Just (Piece Player2 GIPFPiece)),((0,-1),Just (Piece Player1 NormalPiece)),((0,0),Nothing),((0,1),Nothing),((0,2),Nothing),((0,3),Just (Piece Player2 NormalPiece)),((1,-3),Nothing),((1,-2),Just (Piece Player1 GIPFPiece)),((1,-1),Just (Piece Player1 NormalPiece)),((1,0),Nothing),((1,1),Just (Piece Player1 GIPFPiece)),((1,2),Nothing),((2,-3),Just (Piece Player1 GIPFPiece)),((2,-2),Just (Piece Player1 GIPFPiece)),((2,-1),Just (Piece Player1 NormalPiece)),((2,0),Just (Piece Player2 GIPFPiece)),((2,1),Just (Piece Player2 GIPFPiece)),((3,-3),Just (Piece Player2 GIPFPiece)),((3,-2),Just (Piece Player1 GIPFPiece)),((3,-1),Just (Piece Player1 GIPFPiece)),((3,0),Just (Piece Player1 NormalPiece))])) `shouldBe` setOfPieceRun [(Player1,[(-2,-1),(-1,-1),(0,-1),(1,-1),(2,-1),(3,-1)]),(Player2,[(-3,1),(-2,0),(-1,-1),(0,-2)])],setOfPieceRun (pieceRuns $ Grid (fromList [((-3,0),Just (Piece Player2 GIPFPiece)),((-3,1),Just (Piece Player1 GIPFPiece)),((-3,2),Just (Piece Player1 NormalPiece)),((-3,3),Just (Piece Player1 GIPFPiece)),((-2,-1),Nothing),((-2,0),Just (Piece Player2 GIPFPiece)),((-2,1),Just (Piece Player2 NormalPiece)),((-2,2),Just (Piece Player2 NormalPiece)),((-2,3),Just (Piece Player1 GIPFPiece)),((-1,-2),Just (Piece Player2 NormalPiece)),((-1,-1),Just (Piece Player2 GIPFPiece)),((-1,0),Nothing),((-1,1),Nothing),((-1,2),Nothing),((-1,3),Just (Piece Player2 GIPFPiece)),((0,-3),Just (Piece Player1 NormalPiece)),((0,-2),Just (Piece Player1 NormalPiece)),((0,-1),Just (Piece Player1 NormalPiece)),((0,0),Just (Piece Player2 GIPFPiece)),((0,1),Nothing),((0,2),Just (Piece Player1 GIPFPiece)),((0,3),Just (Piece Player2 GIPFPiece)),((1,-3),Just (Piece Player1 NormalPiece)),((1,-2),Just (Piece Player1 NormalPiece)),((1,-1),Nothing),((1,0),Just (Piece Player1 NormalPiece)),((1,1),Just (Piece Player1 GIPFPiece)),((1,2),Nothing),((2,-3),Just (Piece Player2 NormalPiece)),((2,-2),Nothing),((2,-1),Just (Piece Player2 GIPFPiece)),((2,0),Nothing),((2,1),Just (Piece Player1 GIPFPiece)),((3,-3),Just (Piece Player2 NormalPiece)),((3,-2),Nothing),((3,-1),Just (Piece Player2 GIPFPiece)),((3,0),Just (Piece Player2 GIPFPiece))])) `shouldBe` setOfPieceRun [],setOfPieceRun (pieceRuns $ Grid (fromList [((-3,0),Just (Piece Player2 NormalPiece)),((-3,1),Just (Piece Player2 GIPFPiece)),((-3,2),Nothing),((-3,3),Just (Piece Player1 NormalPiece)),((-2,-1),Just (Piece Player2 GIPFPiece)),((-2,0),Just (Piece Player2 NormalPiece)),((-2,1),Just (Piece Player2 NormalPiece)),((-2,2),Just (Piece Player1 NormalPiece)),((-2,3),Just (Piece Player1 GIPFPiece)),((-1,-2),Nothing),((-1,-1),Just (Piece Player2 GIPFPiece)),((-1,0),Nothing),((-1,1),Just (Piece Player1 GIPFPiece)),((-1,2),Just (Piece Player1 GIPFPiece)),((-1,3),Just (Piece Player1 NormalPiece)),((0,-3),Just (Piece Player1 GIPFPiece)),((0,-2),Just (Piece Player1 NormalPiece)),((0,-1),Just (Piece Player1 GIPFPiece)),((0,0),Just (Piece Player2 GIPFPiece)),((0,1),Just (Piece Player2 NormalPiece)),((0,2),Just (Piece Player2 NormalPiece)),((0,3),Just (Piece Player2 NormalPiece)),((1,-3),Nothing),((1,-2),Just (Piece Player2 NormalPiece)),((1,-1),Nothing),((1,0),Just (Piece Player2 NormalPiece)),((1,1),Just (Piece Player2 GIPFPiece)),((1,2),Just (Piece Player2 GIPFPiece)),((2,-3),Just (Piece Player2 GIPFPiece)),((2,-2),Nothing),((2,-1),Nothing),((2,0),Just (Piece Player2 GIPFPiece)),((2,1),Just (Piece Player1 NormalPiece)),((3,-3),Just (Piece Player2 NormalPiece)),((3,-2),Just (Piece Player2 NormalPiece)),((3,-1),Just (Piece Player1 NormalPiece)),((3,0),Just (Piece Player2 NormalPiece))])) `shouldBe` setOfPieceRun [(Player2,[(0,-3),(0,-2),(0,-1),(0,0),(0,1),(0,2),(0,3)]),(Player2,[(0,0),(1,0),(2,0),(3,0)])],setOfPieceRun (pieceRuns $ Grid (fromList [((-3,0),Just (Piece Player2 GIPFPiece)),((-3,1),Just (Piece Player2 GIPFPiece)),((-3,2),Just (Piece Player1 GIPFPiece)),((-3,3),Nothing),((-2,-1),Just (Piece Player1 GIPFPiece)),((-2,0),Nothing),((-2,1),Just (Piece Player2 GIPFPiece)),((-2,2),Just (Piece Player1 NormalPiece)),((-2,3),Just (Piece Player1 NormalPiece)),((-1,-2),Nothing),((-1,-1),Nothing),((-1,0),Just (Piece Player1 NormalPiece)),((-1,1),Just (Piece Player2 GIPFPiece)),((-1,2),Just (Piece Player2 GIPFPiece)),((-1,3),Just (Piece Player1 GIPFPiece)),((0,-3),Just (Piece Player1 NormalPiece)),((0,-2),Just (Piece Player1 NormalPiece)),((0,-1),Just (Piece Player1 GIPFPiece)),((0,0),Just (Piece Player2 NormalPiece)),((0,1),Nothing),((0,2),Just (Piece Player1 NormalPiece)),((0,3),Just (Piece Player2 NormalPiece)),((1,-3),Nothing),((1,-2),Nothing),((1,-1),Just (Piece Player2 GIPFPiece)),((1,0),Just (Piece Player2 GIPFPiece)),((1,1),Just (Piece Player1 GIPFPiece)),((1,2),Just (Piece Player2 GIPFPiece)),((2,-3),Just (Piece Player1 GIPFPiece)),((2,-2),Just (Piece Player2 NormalPiece)),((2,-1),Just (Piece Player1 GIPFPiece)),((2,0),Nothing),((2,1),Just (Piece Player1 GIPFPiece)),((3,-3),Just (Piece Player2 NormalPiece)),((3,-2),Nothing),((3,-1),Just (Piece Player2 GIPFPiece)),((3,0),Just (Piece Player1 NormalPiece))])) `shouldBe` setOfPieceRun [(Player2,[(-2,2),(-1,1),(0,0),(1,-1),(2,-2),(3,-3)])],setOfPieceRun (pieceRuns $ Grid (fromList [((-3,0),Nothing),((-3,1),Nothing),((-3,2),Nothing),((-3,3),Just (Piece Player1 NormalPiece)),((-2,-1),Just (Piece Player2 NormalPiece)),((-2,0),Just (Piece Player1 NormalPiece)),((-2,1),Just (Piece Player1 GIPFPiece)),((-2,2),Nothing),((-2,3),Just (Piece Player2 GIPFPiece)),((-1,-2),Just (Piece Player1 GIPFPiece)),((-1,-1),Nothing),((-1,0),Just (Piece Player1 NormalPiece)),((-1,1),Just (Piece Player2 GIPFPiece)),((-1,2),Just (Piece Player2 NormalPiece)),((-1,3),Nothing),((0,-3),Just (Piece Player2 GIPFPiece)),((0,-2),Just (Piece Player1 GIPFPiece)),((0,-1),Just (Piece Player2 NormalPiece)),((0,0),Nothing),((0,1),Just (Piece Player2 NormalPiece)),((0,2),Just (Piece Player1 GIPFPiece)),((0,3),Just (Piece Player1 GIPFPiece)),((1,-3),Nothing),((1,-2),Nothing),((1,-1),Nothing),((1,0),Just (Piece Player1 NormalPiece)),((1,1),Just (Piece Player1 NormalPiece)),((1,2),Just (Piece Player1 NormalPiece)),((2,-3),Just (Piece Player2 GIPFPiece)),((2,-2),Just (Piece Player2 NormalPiece)),((2,-1),Just (Piece Player2 GIPFPiece)),((2,0),Just (Piece Player1 GIPFPiece)),((2,1),Just (Piece Player1 GIPFPiece)),((3,-3),Just (Piece Player2 NormalPiece)),((3,-2),Nothing),((3,-1),Just (Piece Player1 NormalPiece)),((3,0),Nothing)])) `shouldBe` setOfPieceRun [(Player1,[(0,2),(1,1),(2,0),(3,-1)])],setOfPieceRun (pieceRuns $ Grid (fromList [((-3,0),Just (Piece Player2 NormalPiece)),((-3,1),Just (Piece Player2 NormalPiece)),((-3,2),Just (Piece Player1 NormalPiece)),((-3,3),Just (Piece Player1 NormalPiece)),((-2,-1),Nothing),((-2,0),Nothing),((-2,1),Just (Piece Player2 GIPFPiece)),((-2,2),Just (Piece Player1 GIPFPiece)),((-2,3),Nothing),((-1,-2),Just (Piece Player1 NormalPiece)),((-1,-1),Nothing),((-1,0),Just (Piece Player2 GIPFPiece)),((-1,1),Just (Piece Player2 GIPFPiece)),((-1,2),Just (Piece Player1 NormalPiece)),((-1,3),Just (Piece Player1 GIPFPiece)),((0,-3),Just (Piece Player1 GIPFPiece)),((0,-2),Just (Piece Player1 GIPFPiece)),((0,-1),Just (Piece Player2 NormalPiece)),((0,0),Just (Piece Player2 NormalPiece)),((0,1),Just (Piece Player2 NormalPiece)),((0,2),Just (Piece Player2 GIPFPiece)),((0,3),Just (Piece Player2 GIPFPiece)),((1,-3),Just (Piece Player2 NormalPiece)),((1,-2),Just (Piece Player1 GIPFPiece)),((1,-1),Just (Piece Player2 GIPFPiece)),((1,0),Just (Piece Player2 GIPFPiece)),((1,1),Nothing),((1,2),Just (Piece Player2 NormalPiece)),((2,-3),Nothing),((2,-2),Nothing),((2,-1),Just (Piece Player2 GIPFPiece)),((2,0),Nothing),((2,1),Nothing),((3,-3),Nothing),((3,-2),Nothing),((3,-1),Nothing),((3,0),Just (Piece Player1 GIPFPiece))])) `shouldBe` setOfPieceRun [(Player2,[(0,-3),(0,-2),(0,-1),(0,0),(0,1),(0,2),(0,3)]),(Player2,[(-3,1),(-2,1),(-1,1),(0,1)])],setOfPieceRun (pieceRuns $ Grid (fromList [((-3,0),Just (Piece Player2 NormalPiece)),((-3,1),Nothing),((-3,2),Just (Piece Player1 NormalPiece)),((-3,3),Just (Piece Player2 NormalPiece)),((-2,-1),Just (Piece Player1 NormalPiece)),((-2,0),Just (Piece Player1 GIPFPiece)),((-2,1),Nothing),((-2,2),Nothing),((-2,3),Just (Piece Player2 GIPFPiece)),((-1,-2),Nothing),((-1,-1),Just (Piece Player2 GIPFPiece)),((-1,0),Nothing),((-1,1),Just (Piece Player1 GIPFPiece)),((-1,2),Just (Piece Player1 GIPFPiece)),((-1,3),Just (Piece Player2 NormalPiece)),((0,-3),Just (Piece Player2 NormalPiece)),((0,-2),Just (Piece Player2 GIPFPiece)),((0,-1),Just (Piece Player1 NormalPiece)),((0,0),Just (Piece Player1 NormalPiece)),((0,1),Just (Piece Player1 NormalPiece)),((0,2),Just (Piece Player2 NormalPiece)),((0,3),Just (Piece Player1 GIPFPiece)),((1,-3),Just (Piece Player2 NormalPiece)),((1,-2),Nothing),((1,-1),Just (Piece Player2 NormalPiece)),((1,0),Just (Piece Player2 NormalPiece)),((1,1),Nothing),((1,2),Just (Piece Player2 GIPFPiece)),((2,-3),Nothing),((2,-2),Just (Piece Player1 GIPFPiece)),((2,-1),Nothing),((2,0),Just (Piece Player1 GIPFPiece)),((2,1),Nothing),((3,-3),Just (Piece Player1 NormalPiece)),((3,-2),Nothing),((3,-1),Just (Piece Player2 NormalPiece)),((3,0),Nothing)])) `shouldBe` setOfPieceRun [],setOfPieceRun (pieceRuns $ Grid (fromList [((-3,0),Just (Piece Player2 NormalPiece)),((-3,1),Just (Piece Player2 NormalPiece)),((-3,2),Nothing),((-3,3),Just (Piece Player1 GIPFPiece)),((-2,-1),Just (Piece Player2 NormalPiece)),((-2,0),Just (Piece Player1 GIPFPiece)),((-2,1),Just (Piece Player1 NormalPiece)),((-2,2),Just (Piece Player1 NormalPiece)),((-2,3),Just (Piece Player2 GIPFPiece)),((-1,-2),Just (Piece Player1 NormalPiece)),((-1,-1),Just (Piece Player2 NormalPiece)),((-1,0),Just (Piece Player1 GIPFPiece)),((-1,1),Nothing),((-1,2),Just (Piece Player2 GIPFPiece)),((-1,3),Just (Piece Player1 GIPFPiece)),((0,-3),Just (Piece Player1 NormalPiece)),((0,-2),Just (Piece Player2 NormalPiece)),((0,-1),Nothing),((0,0),Just (Piece Player1 GIPFPiece)),((0,1),Just (Piece Player1 NormalPiece)),((0,2),Just (Piece Player1 GIPFPiece)),((0,3),Just (Piece Player2 GIPFPiece)),((1,-3),Just (Piece Player2 NormalPiece)),((1,-2),Just (Piece Player2 GIPFPiece)),((1,-1),Just (Piece Player1 NormalPiece)),((1,0),Just (Piece Player2 GIPFPiece)),((1,1),Just (Piece Player2 NormalPiece)),((1,2),Just (Piece Player2 NormalPiece)),((2,-3),Nothing),((2,-2),Nothing),((2,-1),Just (Piece Player1 GIPFPiece)),((2,0),Just (Piece Player1 GIPFPiece)),((2,1),Nothing),((3,-3),Nothing),((3,-2),Nothing),((3,-1),Nothing),((3,0),Just (Piece Player1 NormalPiece))])) `shouldBe` setOfPieceRun [],setOfPieceRun (pieceRuns $ Grid (fromList [((-3,0),Just (Piece Player1 GIPFPiece)),((-3,1),Just (Piece Player2 NormalPiece)),((-3,2),Nothing),((-3,3),Just (Piece Player2 NormalPiece)),((-2,-1),Just (Piece Player1 GIPFPiece)),((-2,0),Just (Piece Player1 GIPFPiece)),((-2,1),Just (Piece Player2 NormalPiece)),((-2,2),Just (Piece Player2 NormalPiece)),((-2,3),Just (Piece Player2 NormalPiece)),((-1,-2),Just (Piece Player1 GIPFPiece)),((-1,-1),Nothing),((-1,0),Nothing),((-1,1),Just (Piece Player2 GIPFPiece)),((-1,2),Nothing),((-1,3),Just (Piece Player2 GIPFPiece)),((0,-3),Just (Piece Player2 NormalPiece)),((0,-2),Nothing),((0,-1),Nothing),((0,0),Just (Piece Player2 NormalPiece)),((0,1),Just (Piece Player2 GIPFPiece)),((0,2),Just (Piece Player2 NormalPiece)),((0,3),Nothing),((1,-3),Just (Piece Player1 NormalPiece)),((1,-2),Just (Piece Player1 GIPFPiece)),((1,-1),Just (Piece Player2 NormalPiece)),((1,0),Just (Piece Player1 NormalPiece)),((1,1),Just (Piece Player2 GIPFPiece)),((1,2),Nothing),((2,-3),Nothing),((2,-2),Just (Piece Player2 GIPFPiece)),((2,-1),Just (Piece Player2 GIPFPiece)),((2,0),Nothing),((2,1),Just (Piece Player2 GIPFPiece)),((3,-3),Just (Piece Player2 GIPFPiece)),((3,-2),Just (Piece Player1 NormalPiece)),((3,-1),Nothing),((3,0),Just (Piece Player2 GIPFPiece))])) `shouldBe` setOfPieceRun [(Player2,[(-3,1),(-2,1),(-1,1),(0,1),(1,1),(2,1)]),(Player2,[(-3,3),(-2,2),(-1,1),(0,0),(1,-1),(2,-2),(3,-3)])],setOfPieceRun (pieceRuns $ Grid (fromList [((-3,0),Just (Piece Player1 GIPFPiece)),((-3,1),Just (Piece Player1 NormalPiece)),((-3,2),Just (Piece Player1 GIPFPiece)),((-3,3),Nothing),((-2,-1),Just (Piece Player1 NormalPiece)),((-2,0),Just (Piece Player1 GIPFPiece)),((-2,1),Just (Piece Player2 GIPFPiece)),((-2,2),Just (Piece Player2 GIPFPiece)),((-2,3),Just (Piece Player1 GIPFPiece)),((-1,-2),Just (Piece Player1 GIPFPiece)),((-1,-1),Just (Piece Player1 GIPFPiece)),((-1,0),Just (Piece Player2 NormalPiece)),((-1,1),Just (Piece Player2 GIPFPiece)),((-1,2),Just (Piece Player1 NormalPiece)),((-1,3),Just (Piece Player2 NormalPiece)),((0,-3),Just (Piece Player2 NormalPiece)),((0,-2),Just (Piece Player2 NormalPiece)),((0,-1),Just (Piece Player1 NormalPiece)),((0,0),Just (Piece Player2 NormalPiece)),((0,1),Just (Piece Player1 GIPFPiece)),((0,2),Nothing),((0,3),Just (Piece Player1 GIPFPiece)),((1,-3),Just (Piece Player2 NormalPiece)),((1,-2),Just (Piece Player1 GIPFPiece)),((1,-1),Nothing),((1,0),Just (Piece Player2 GIPFPiece)),((1,1),Nothing),((1,2),Just (Piece Player1 NormalPiece)),((2,-3),Nothing),((2,-2),Just (Piece Player2 NormalPiece)),((2,-1),Just (Piece Player1 GIPFPiece)),((2,0),Just (Piece Player1 GIPFPiece)),((2,1),Just (Piece Player2 GIPFPiece)),((3,-3),Just (Piece Player1 GIPFPiece)),((3,-2),Nothing),((3,-1),Nothing),((3,0),Just (Piece Player1 NormalPiece))])) `shouldBe` setOfPieceRun [],setOfPieceRun (pieceRuns $ Grid (fromList [((-3,0),Just (Piece Player2 NormalPiece)),((-3,1),Nothing),((-3,2),Just (Piece Player1 GIPFPiece)),((-3,3),Just (Piece Player1 NormalPiece)),((-2,-1),Just (Piece Player1 GIPFPiece)),((-2,0),Nothing),((-2,1),Just (Piece Player2 NormalPiece)),((-2,2),Just (Piece Player2 GIPFPiece)),((-2,3),Just (Piece Player1 NormalPiece)),((-1,-2),Just (Piece Player2 GIPFPiece)),((-1,-1),Just (Piece Player2 NormalPiece)),((-1,0),Nothing),((-1,1),Just (Piece Player2 GIPFPiece)),((-1,2),Nothing),((-1,3),Just (Piece Player1 NormalPiece)),((0,-3),Just (Piece Player1 NormalPiece)),((0,-2),Just (Piece Player2 GIPFPiece)),((0,-1),Just (Piece Player1 GIPFPiece)),((0,0),Nothing),((0,1),Nothing),((0,2),Just (Piece Player1 GIPFPiece)),((0,3),Just (Piece Player2 GIPFPiece)),((1,-3),Just (Piece Player2 NormalPiece)),((1,-2),Nothing),((1,-1),Just (Piece Player1 GIPFPiece)),((1,0),Just (Piece Player2 GIPFPiece)),((1,1),Just (Piece Player1 GIPFPiece)),((1,2),Just (Piece Player1 NormalPiece)),((2,-3),Just (Piece Player1 GIPFPiece)),((2,-2),Just (Piece Player1 NormalPiece)),((2,-1),Just (Piece Player2 NormalPiece)),((2,0),Nothing),((2,1),Just (Piece Player1 NormalPiece)),((3,-3),Just (Piece Player1 GIPFPiece)),((3,-2),Nothing),((3,-1),Just (Piece Player1 GIPFPiece)),((3,0),Nothing)])) `shouldBe` setOfPieceRun [],setOfPieceRun (pieceRuns $ Grid (fromList [((-3,0),Nothing),((-3,1),Just (Piece Player1 GIPFPiece)),((-3,2),Nothing),((-3,3),Just (Piece Player2 NormalPiece)),((-2,-1),Just (Piece Player1 GIPFPiece)),((-2,0),Just (Piece Player1 NormalPiece)),((-2,1),Nothing),((-2,2),Nothing),((-2,3),Just (Piece Player2 NormalPiece)),((-1,-2),Just (Piece Player1 GIPFPiece)),((-1,-1),Nothing),((-1,0),Just (Piece Player2 NormalPiece)),((-1,1),Just (Piece Player2 NormalPiece)),((-1,2),Nothing),((-1,3),Nothing),((0,-3),Nothing),((0,-2),Just (Piece Player2 NormalPiece)),((0,-1),Just (Piece Player2 NormalPiece)),((0,0),Just (Piece Player2 GIPFPiece)),((0,1),Just (Piece Player1 GIPFPiece)),((0,2),Just (Piece Player1 NormalPiece)),((0,3),Just (Piece Player1 NormalPiece)),((1,-3),Just (Piece Player2 GIPFPiece)),((1,-2),Just (Piece Player2 NormalPiece)),((1,-1),Just (Piece Player1 NormalPiece)),((1,0),Just (Piece Player1 NormalPiece)),((1,1),Just (Piece Player2 GIPFPiece)),((1,2),Just (Piece Player2 NormalPiece)),((2,-3),Nothing),((2,-2),Nothing),((2,-1),Just (Piece Player2 GIPFPiece)),((2,0),Just (Piece Player2 GIPFPiece)),((2,1),Just (Piece Player2 GIPFPiece)),((3,-3),Just (Piece Player2 GIPFPiece)),((3,-2),Nothing),((3,-1),Just (Piece Player1 NormalPiece)),((3,0),Nothing)])) `shouldBe` setOfPieceRun [],setOfPieceRun (pieceRuns $ Grid (fromList [((-3,0),Just (Piece Player2 GIPFPiece)),((-3,1),Just (Piece Player2 GIPFPiece)),((-3,2),Just (Piece Player1 GIPFPiece)),((-3,3),Just (Piece Player1 NormalPiece)),((-2,-1),Just (Piece Player1 GIPFPiece)),((-2,0),Nothing),((-2,1),Just (Piece Player2 GIPFPiece)),((-2,2),Nothing),((-2,3),Just (Piece Player1 GIPFPiece)),((-1,-2),Nothing),((-1,-1),Just (Piece Player1 GIPFPiece)),((-1,0),Just (Piece Player1 GIPFPiece)),((-1,1),Nothing),((-1,2),Just (Piece Player1 GIPFPiece)),((-1,3),Nothing),((0,-3),Just (Piece Player1 GIPFPiece)),((0,-2),Nothing),((0,-1),Nothing),((0,0),Just (Piece Player2 NormalPiece)),((0,1),Just (Piece Player2 GIPFPiece)),((0,2),Just (Piece Player2 GIPFPiece)),((0,3),Just (Piece Player2 NormalPiece)),((1,-3),Just (Piece Player1 GIPFPiece)),((1,-2),Just (Piece Player2 NormalPiece)),((1,-1),Nothing),((1,0),Nothing),((1,1),Just (Piece Player2 NormalPiece)),((1,2),Nothing),((2,-3),Just (Piece Player1 GIPFPiece)),((2,-2),Just (Piece Player1 NormalPiece)),((2,-1),Just (Piece Player2 NormalPiece)),((2,0),Just (Piece Player1 GIPFPiece)),((2,1),Nothing),((3,-3),Just (Piece Player2 NormalPiece)),((3,-2),Just (Piece Player2 NormalPiece)),((3,-1),Nothing),((3,0),Just (Piece Player2 NormalPiece))])) `shouldBe` setOfPieceRun [(Player2,[(0,0),(0,1),(0,2),(0,3)])],setOfPieceRun (pieceRuns $ Grid (fromList [((-3,0),Nothing),((-3,1),Just (Piece Player1 NormalPiece)),((-3,2),Just (Piece Player1 NormalPiece)),((-3,3),Just (Piece Player2 NormalPiece)),((-2,-1),Just (Piece Player1 GIPFPiece)),((-2,0),Just (Piece Player2 NormalPiece)),((-2,1),Nothing),((-2,2),Just (Piece Player1 GIPFPiece)),((-2,3),Just (Piece Player2 NormalPiece)),((-1,-2),Nothing),((-1,-1),Just (Piece Player2 GIPFPiece)),((-1,0),Just (Piece Player1 GIPFPiece)),((-1,1),Just (Piece Player1 NormalPiece)),((-1,2),Just (Piece Player2 NormalPiece)),((-1,3),Just (Piece Player1 NormalPiece)),((0,-3),Nothing),((0,-2),Nothing),((0,-1),Nothing),((0,0),Nothing),((0,1),Just (Piece Player1 GIPFPiece)),((0,2),Just (Piece Player1 GIPFPiece)),((0,3),Just (Piece Player2 GIPFPiece)),((1,-3),Just (Piece Player1 NormalPiece)),((1,-2),Nothing),((1,-1),Nothing),((1,0),Just (Piece Player1 GIPFPiece)),((1,1),Nothing),((1,2),Just (Piece Player1 GIPFPiece)),((2,-3),Just (Piece Player1 NormalPiece)),((2,-2),Just (Piece Player2 GIPFPiece)),((2,-1),Nothing),((2,0),Nothing),((2,1),Just (Piece Player1 GIPFPiece)),((3,-3),Just (Piece Player2 GIPFPiece)),((3,-2),Just (Piece Player1 GIPFPiece)),((3,-1),Just (Piece Player2 GIPFPiece)),((3,0),Nothing)])) `shouldBe` setOfPieceRun [],setOfPieceRun (pieceRuns $ Grid (fromList [((-3,0),Just (Piece Player1 GIPFPiece)),((-3,1),Just (Piece Player1 NormalPiece)),((-3,2),Just (Piece Player2 NormalPiece)),((-3,3),Nothing),((-2,-1),Just (Piece Player1 NormalPiece)),((-2,0),Just (Piece Player1 GIPFPiece)),((-2,1),Just (Piece Player1 NormalPiece)),((-2,2),Nothing),((-2,3),Nothing),((-1,-2),Nothing),((-1,-1),Just (Piece Player2 NormalPiece)),((-1,0),Just (Piece Player2 NormalPiece)),((-1,1),Just (Piece Player1 NormalPiece)),((-1,2),Just (Piece Player1 GIPFPiece)),((-1,3),Just (Piece Player1 NormalPiece)),((0,-3),Just (Piece Player2 NormalPiece)),((0,-2),Just (Piece Player1 GIPFPiece)),((0,-1),Nothing),((0,0),Just (Piece Player1 NormalPiece)),((0,1),Just (Piece Player1 NormalPiece)),((0,2),Just (Piece Player2 GIPFPiece)),((0,3),Just (Piece Player2 GIPFPiece)),((1,-3),Just (Piece Player2 GIPFPiece)),((1,-2),Just (Piece Player2 GIPFPiece)),((1,-1),Nothing),((1,0),Nothing),((1,1),Just (Piece Player2 GIPFPiece)),((1,2),Just (Piece Player2 NormalPiece)),((2,-3),Just (Piece Player1 NormalPiece)),((2,-2),Nothing),((2,-1),Nothing),((2,0),Just (Piece Player1 GIPFPiece)),((2,1),Just (Piece Player2 GIPFPiece)),((3,-3),Nothing),((3,-2),Just (Piece Player2 NormalPiece)),((3,-1),Nothing),((3,0),Just (Piece Player2 GIPFPiece))])) `shouldBe` setOfPieceRun [(Player1,[(-3,1),(-2,1),(-1,1),(0,1),(1,1),(2,1)]),(Player2,[(0,3),(1,2),(2,1),(3,0)])],setOfPieceRun (pieceRuns $ Grid (fromList [((-3,0),Just (Piece Player1 NormalPiece)),((-3,1),Just (Piece Player2 NormalPiece)),((-3,2),Just (Piece Player1 GIPFPiece)),((-3,3),Nothing),((-2,-1),Just (Piece Player2 GIPFPiece)),((-2,0),Just (Piece Player1 NormalPiece)),((-2,1),Just (Piece Player2 NormalPiece)),((-2,2),Nothing),((-2,3),Just (Piece Player2 GIPFPiece)),((-1,-2),Nothing),((-1,-1),Nothing),((-1,0),Just (Piece Player1 NormalPiece)),((-1,1),Just (Piece Player1 GIPFPiece)),((-1,2),Nothing),((-1,3),Nothing),((0,-3),Nothing),((0,-2),Just (Piece Player1 GIPFPiece)),((0,-1),Just (Piece Player2 GIPFPiece)),((0,0),Just (Piece Player1 NormalPiece)),((0,1),Nothing),((0,2),Just (Piece Player2 NormalPiece)),((0,3),Just (Piece Player2 NormalPiece)),((1,-3),Just (Piece Player1 NormalPiece)),((1,-2),Just (Piece Player1 GIPFPiece)),((1,-1),Nothing),((1,0),Just (Piece Player2 GIPFPiece)),((1,1),Just (Piece Player1 NormalPiece)),((1,2),Just (Piece Player1 GIPFPiece)),((2,-3),Just (Piece Player2 NormalPiece)),((2,-2),Just (Piece Player1 NormalPiece)),((2,-1),Nothing),((2,0),Just (Piece Player2 GIPFPiece)),((2,1),Just (Piece Player1 GIPFPiece)),((3,-3),Nothing),((3,-2),Just (Piece Player2 NormalPiece)),((3,-1),Nothing),((3,0),Just (Piece Player2 NormalPiece))])) `shouldBe` setOfPieceRun [(Player1,[(-3,0),(-2,0),(-1,0),(0,0),(1,0),(2,0),(3,0)])],setOfPieceRun (pieceRuns $ Grid (fromList [((-3,0),Just (Piece Player2 NormalPiece)),((-3,1),Just (Piece Player2 GIPFPiece)),((-3,2),Just (Piece Player1 GIPFPiece)),((-3,3),Nothing),((-2,-1),Just (Piece Player2 NormalPiece)),((-2,0),Nothing),((-2,1),Just (Piece Player1 NormalPiece)),((-2,2),Just (Piece Player1 GIPFPiece)),((-2,3),Just (Piece Player2 GIPFPiece)),((-1,-2),Just (Piece Player1 GIPFPiece)),((-1,-1),Just (Piece Player2 NormalPiece)),((-1,0),Just (Piece Player1 GIPFPiece)),((-1,1),Just (Piece Player2 NormalPiece)),((-1,2),Just (Piece Player2 GIPFPiece)),((-1,3),Just (Piece Player2 NormalPiece)),((0,-3),Just (Piece Player1 GIPFPiece)),((0,-2),Just (Piece Player1 GIPFPiece)),((0,-1),Just (Piece Player1 GIPFPiece)),((0,0),Just (Piece Player1 GIPFPiece)),((0,1),Just (Piece Player2 GIPFPiece)),((0,2),Just (Piece Player1 GIPFPiece)),((0,3),Nothing),((1,-3),Just (Piece Player1 NormalPiece)),((1,-2),Just (Piece Player1 GIPFPiece)),((1,-1),Just (Piece Player2 NormalPiece)),((1,0),Nothing),((1,1),Just (Piece Player1 GIPFPiece)),((1,2),Just (Piece Player1 NormalPiece)),((2,-3),Nothing),((2,-2),Just (Piece Player2 GIPFPiece)),((2,-1),Just (Piece Player2 NormalPiece)),((2,0),Just (Piece Player2 NormalPiece)),((2,1),Just (Piece Player1 NormalPiece)),((3,-3),Nothing),((3,-2),Just (Piece Player1 NormalPiece)),((3,-1),Just (Piece Player2 NormalPiece)),((3,0),Just (Piece Player2 NormalPiece))])) `shouldBe` setOfPieceRun [(Player1,[(0,-3),(0,-2),(0,-1),(0,0),(0,1),(0,2)]),(Player1,[(-3,2),(-2,1),(-1,0),(0,-1),(1,-2)])]]
